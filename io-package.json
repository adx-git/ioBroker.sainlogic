{
    "common": {
        "name": "sainlogic",
        "version": "0.6.4",
        "news": {
          "0.6.4": {
            "en": "For WH2650: Adding model name and weather station communication frequency datapoint",
            "de": "Für WH2650: Modelname und Kommunikationsfrequenz hinzugefügt"
          },
          "0.6.3": {
            "en": "Fix outdoor humidity",
            "de": "Outdoor Humidity repariert"
          },
          "0.6.2": {
            "en": "Add Forwarding capability and additional sensors",
            "de": "Möglichkeit Werte die per Listener ankommen weiterzuleiten und zusätzliche Sensoren auszuwerten"
          },
          "0.6.1": {
            "en": "Add Wind Heading",
            "de": "Windrichtung auf der Windrose hinzugefügt"
          },
          "0.6.0": {
            "en": "Add Ecowitt support",
            "de": "Ecowitt für Listener hinzugefügt"
          },
          "0.5.6": {
            "en": "UVraw conversion fix",
            "de": "UVraw korrigiert"
          },
          "0.5.5": {
            "en": "Add UVraw",
            "de": "UVraw hinzugefügt"
          },
          "0.5.4": {
            "en": "bugix",
            "de": "Bugfix"
          },
          "0.5.3": {
            "en": "bugix",
            "de": "Bugfix"
          },
          "0.5.2": {
            "en": "bugix",
            "de": "Bugfix"
          },
          "0.5.1": {
            "en": "bugix",
            "de": "Bugfix"
          },
          "0.5.0": {
            "en": "Added daily min/max values",
            "de": "Tagesmin-/max-Werte hinzugefügt"
          },
          "0.4.1": {
            "en": "Fix for max wind speeds",
            "de": "Max Windwerte korrigiert"
          },
          "0.4.0": {
            "en": "Added Min Values",
            "de": "Min Werte abfragen"
          },
          "0.3.0": {
            "en": "Added Max Values",
            "de": "Max Werte abfragen"
          },
          "0.2.2": {
            "en": "Bugfix",
            "de": "bugfix"
          },
          "0.2.1": {
            "en": "Schedule parallel calls",
            "de": "Scheduler parallelisieren"
          },
          "0.2.0": {
            "en": "Refactoring",
            "de": "Codeumau"
          },
          "0.1.2": {
            "en": "Beta Release with Listener and Scheduler",
            "de": "Beta Release mit Listener und Scheduler"
          }
        },
        "title": "Sainlogic Weatherstation",
        "titleLang": {
            "en": "Sainlogic Weatherstation",
            "de": "Sainlogic Weatherstation"
        },
        "desc": {
            "en": "Read data from a sainlogic based weather station",
            "de": "Read data from a sainlogic based weather station"
        },
        "authors": [
            "Fogg <foggch@gmail.com>"
        ],
        "keywords": [
            "weather",
            "sainlogic"
        ],
        "license": "MIT",
        "platform": "Javascript/Node.js",
        "main": "main.js",
        "icon": "sainlogic.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/phifogg/ioBroker.sainlogic/master/admin/sainlogic.png",
        "readme": "https://github.com/phifogg/ioBroker.sainlogic/blob/master/README.md",
        "loglevel": "info",
        "mode": "daemon",
        "type": "weather",
        "compact": true,
        "connectionType": "local",
        "dataSource": "push",
        "materialize": true,
        "dependencies": [
            {
                "js-controller": ">=1.4.2"
            }
        ]
    },
    "native": {
        "bind": "",
        "port": 45000,
        "path": "/weatherstation/updateweatherstation.php",
        "listener_active": false,
        "listener_protocol": "wunderground",
        "listener_forward_url": "",
        "scheduler_active": false,
        "ws_address": "",
        "ws_port": 45000,
        "ws_freq": 15,
        "ws_getfirmware": true,
        "ws_getcurrent": true,
        "ws_getmax": false,
        "ws_getmin": false,
        "ws_getmaxdaily": false,
        "ws_getmindaily": false,
        "unit_rain": "mm",
        "unit_temperature": "°C",
        "unit_pressure": "hPa",
        "unit_windspeed": "km/h",
        "unit_solar": "lx"
    },
    "objects": [],
    "instanceObjects": [ 
        {
            "_id": "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id": "info.last_update",
            "type": "state",
            "common": {
                "role": "",
                "name": "Timestamp of last update received from weather station",
                "type": "string",
                "read": true,
                "write": false,
                "def": ""
            },
            "native": {}
        },
        {
            "_id": "info.softwaretype",
            "type": "state",
            "common": {
                "role": "",
                "name": "Software type and version of weather station",
                "type": "string",
                "read": true,
                "write": false,
                "def": ""
            },
            "native": {}
        },
        {
            "_id": "weather",
            "type": "channel",
            "common": {
                "name": "Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.current",
            "type": "channel",
            "common": {
                "name": "Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues",
            "type": "channel",
            "common": {
                "name": "Max values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues.absolut",
            "type": "channel",
            "common": {
                "name": "Max values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.minvalues.absolut",
            "type": "channel",
            "common": {
                "name": "Min values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues.daily",
            "type": "channel",
            "common": {
                "name": "Daily Min values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.minvalues.daily",
            "type": "channel",
            "common": {
                "name": "Min daily values of Weather data"
            },
            "native": {}
        } 
    ]
}